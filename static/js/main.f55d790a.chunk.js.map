{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Container/Conteiner.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleImputChange","e","currentTarget","value","setState","onSubmitPress","preventDefault","props","getContactData","resetFormField","this","onSubmit","className","s","form","fieldset","label","type","onChange","input","button","disabled","Component","ContactListItem","id","onDeleteContact","listItem","text","onClick","ContactList","contactList","map","Container","children","container","Filter","filter","changeFilter","Section","section","App","contacts","deleteContact","contactId","prevState","cont","addContact","contact","uuidv4","find","oldContact","toLowerCase","alert","getFilteredContacts","normalizeFilter","person","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,SAAW,8BAA8B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,qBCA1ID,EAAOC,QAAU,CAAC,SAAW,kCAAkC,OAAS,kC,iBCAxED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mCCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,2B,4KCqEbC,E,4MAlEbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAIVC,kBAAoB,SAAAC,GAAM,IAAD,EACCA,EAAEC,cAAlBJ,EADe,EACfA,KAAMK,EADS,EACTA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAI1BE,cAAgB,SAAAJ,GACdA,EAAEK,iBAGF,EAAKC,MAAMC,eAAe,EAAKX,OAE/B,EAAKY,kB,EAIPA,eAAiB,WACf,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBW,KAAKb,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACNM,EAAqCK,KAArCL,cAAeL,EAAsBU,KAAtBV,kBAEvB,OACE,sBAAMW,SAAUN,EAAeO,UAAWC,IAAEC,KAA5C,SACE,2BAAUF,UAAWC,IAAEE,SAAvB,UACE,wBAAOH,UAAWC,IAAEG,MAApB,UACE,wCACA,uBACEC,KAAK,OACLnB,KAAK,OACLK,MAAOL,EACPoB,SAAUlB,EACVY,UAAWC,IAAEM,WAGjB,wBAAOP,UAAWC,IAAEG,MAApB,UACE,0CACA,uBACEC,KAAK,MACLnB,KAAK,SACLK,MAAOJ,EACPmB,SAAUlB,EACVY,UAAWC,IAAEM,WAGjB,wBACEF,KAAK,SACLL,UAAWC,IAAEO,OACbC,WAAYvB,GAAQC,GAHtB,SAKE,2D,GA3DcuB,a,iCC2BXC,MA1Bf,YAAiE,IAAtCC,EAAqC,EAArCA,GAAI1B,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQ0B,EAAmB,EAAnBA,gBAC3C,OACE,qBAAIb,UAAWC,IAAEa,SAAjB,UACE,oBAAGd,UAAWC,IAAEc,KAAhB,UACG7B,EADH,KACWC,KAEX,wBACEkB,KAAK,SACLL,UAAWC,IAAEO,OACbQ,QAAS,WACPH,EAAgBD,IAJpB,wBCgBSK,MArBf,YAAwD,IAAjCC,EAAgC,EAAhCA,YAAaL,EAAmB,EAAnBA,gBAClC,OACE,oBAAIb,UAAWC,IAAEiB,YAAjB,SACGA,EAAYC,KAAI,gBAAGP,EAAH,EAAGA,GAAI1B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACf,cAAC,EAAD,CAEEyB,GAAIA,EACJ1B,KAAMA,EACNC,OAAQA,EACR0B,gBAAiBA,GAJZD,S,iBCEAQ,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKrB,UAAWC,IAAEqB,UAAlB,SAA8BD,K,iBCoBxBE,MArBf,YAA2C,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aACxB,OACE,wBAAOzB,UAAWC,IAAEG,MAApB,UACE,wDACA,uBACEC,KAAK,OACLnB,KAAK,SACL0B,GAAG,SACHrB,MAAOiC,EACPlB,SAAUmB,EACVzB,UAAWC,IAAEM,Y,iBCFNmB,MARf,YAAgC,IAAbL,EAAY,EAAZA,SACjB,OAAO,yBAASrB,UAAWC,IAAE0B,QAAtB,SAAgCN,KCsG1BO,E,4MAlGb3C,MAAQ,CACN4C,SAAU,GACVL,OAAQ,I,EAuBVM,cAAgB,SAAAC,GACd,EAAKvC,UAAS,SAAAwC,GAAS,MAAK,CAC1BH,SAAUG,EAAUH,SAASL,QAAO,SAAAS,GAAI,OAAIA,EAAKrB,KAAOmB,U,EAK5DG,WAAa,YAAuB,IAApBhD,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACZ0C,EAAa,EAAK5C,MAAlB4C,SAIFM,EAAU,CAAEvB,GADPwB,cACWlD,OAAMC,UAG5B,GACE0C,EAASQ,MACP,SAAAC,GAAU,OAAIA,EAAWpD,KAAKqD,gBAAkBrD,EAAKqD,iBAGvD,OAAOC,MAAM,GAAD,OAAItD,EAAJ,2BAGd,EAAKM,UAAS,SAAAwC,GAAS,MAAK,CAC1BH,SAAS,CAAEM,GAAH,mBAAeH,EAAUH,gB,EAKrCY,oBAAsB,WAAO,IAAD,EACG,EAAKxD,MAA1B4C,EADkB,EAClBA,SACFa,EAFoB,EACRlB,OACae,cAE/B,OAAOV,EAASL,QAAO,SAAAmB,GAAM,OAC3BA,EAAOzD,KAAKqD,cAAcK,SAASF,O,EAKvCjB,aAAe,SAAApC,GAAM,IAAD,EACMA,EAAEC,cAAlBJ,EADU,EACVA,KAAMK,EADI,EACJA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,kEA3DxB,IAAMsC,EAAWgB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMpB,GAG9BkB,GACFjD,KAAKN,SAAS,CAAEqC,SAAUkB,M,yCAKXG,EAAWlB,GAExBlC,KAAKb,MAAM4C,WAAaG,EAAUH,UACpCgB,aAAaM,QAAQ,WAAYH,KAAKI,UAAUtD,KAAKb,MAAM4C,a,+BAiDrD,IACAL,EAAW1B,KAAKb,MAAhBuC,OAENM,EAIEhC,KAJFgC,cACAI,EAGEpC,KAHFoC,WACAT,EAEE3B,KAFF2B,aAGI4B,GAAmBZ,EADrB3C,KADF2C,uBAIF,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAa7C,eAAgBsC,OAE/B,eAAC,EAAD,WACE,0CACA,cAAC,EAAD,CAAQV,OAAQA,EAAQC,aAAcA,IACtC,cAAC,EAAD,CACEP,YAAamC,EACbxC,gBAAiBiB,c,GA3FXpB,a,YCFlB4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f55d790a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldset\":\"ContactForm_fieldset__1h_m1\",\"label\":\"ContactForm_label__yjoch\",\"input\":\"ContactForm_input__3bDVN\",\"button\":\"ContactForm_button__vDp1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3biKY\",\"button\":\"ContactListItem_button__fK-iW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1GqvW\",\"input\":\"Filter_input__3vugd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3CGek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3dVqt\"};","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  // динамічно рендерить зміну полів інпутів\r\n  handleImputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // виконується при Сабміті форми\r\n  onSubmitPress = e => {\r\n    e.preventDefault();\r\n\r\n    // результати полів прокидає в State Арр.js\r\n    this.props.getContactData(this.state);\r\n\r\n    this.resetFormField();\r\n  };\r\n\r\n  // очищає поля форми після Submit\r\n  resetFormField = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { onSubmitPress, handleImputChange } = this;\r\n\r\n    return (\r\n      <form onSubmit={onSubmitPress} className={s.form}>\r\n        <fieldset className={s.fieldset}>\r\n          <label className={s.label}>\r\n            <span>name</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleImputChange}\r\n              className={s.input}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            <span>number</span>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={handleImputChange}\r\n              className={s.input}\r\n            />\r\n          </label>\r\n          <button\r\n            type=\"submit\"\r\n            className={s.button}\r\n            disabled={!(name && number)}\r\n          >\r\n            <span>add contacts</span>\r\n          </button>\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { string, func } from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p className={s.text}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        className={s.button}\r\n        onClick={() => {\r\n          onDeleteContact(id);\r\n        }}\r\n      >\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: string.isRequired,\r\n  name: string.isRequired,\r\n  number: string.isRequired,\r\n  onDeleteContact: func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport { array, func } from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nfunction ContactList({ contactList, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contactList.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactList: array.isRequired,\r\n  onDeleteContact: func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { node } from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { string, func } from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ filter, changeFilter }) {\r\n  return (\r\n    <label className={s.label}>\r\n      <span>find contact by name</span>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        id=\"filter\"\r\n        value={filter}\r\n        onChange={changeFilter}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: string.isRequired,\r\n  changeFilter: func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { node } from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ children }) {\r\n  return <section className={s.section}>{children}</section>;\r\n}\r\n\r\nSection.propTypes = {\r\n  children: node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Container from './components/Container';\nimport Filter from './components/Filter/Filter';\nimport Section from './components/Section/Section';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  // читає дані з localStorage\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    // перевіряє чи не null\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  // оновлює дані в localStorage\n  componentDidUpdate(prevProps, prevState) {\n    // при відмінному state.contacts, оновлює localStorage\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  // видаляє контакт по кліку на кнопку Delete\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(cont => cont.id !== contactId),\n    }));\n  };\n\n  // отримує параметри з Форми, додає ІД, формує повноцінний контакт\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    // створює контакт\n    const id = uuidv4();\n    const contact = { id, name, number };\n\n    // перевіряє чи відсутні дублі по імені\n    if (\n      contacts.find(\n        oldContact => oldContact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      return alert(`${name} is already in contact`);\n    }\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  // фільтрує створені контакти\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(person =>\n      person.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  // пише значення в Стейт\n  changeFilter = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const {\n      deleteContact,\n      addContact,\n      changeFilter,\n      getFilteredContacts,\n    } = this;\n    const filteredContacts = getFilteredContacts();\n\n    return (\n      <Container>\n        <Section>\n          <h1>Phonebook</h1>\n          <ContactForm getContactData={addContact} />\n        </Section>\n        <Section>\n          <h2>Contacts</h2>\n          <Filter filter={filter} changeFilter={changeFilter} />\n          <ContactList\n            contactList={filteredContacts}\n            onDeleteContact={deleteContact}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './css/common.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}